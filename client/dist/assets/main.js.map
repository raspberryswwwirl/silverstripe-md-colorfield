{"version":3,"file":"main.js","sources":["../../plugin-vue:export-helper","../../src/components/MDText.vue","../../src/classes/swatch.js","../../src/components/MaterialColorPicker.ce.vue","../../src/main.js"],"sourcesContent":["\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<template>\n    <component :is=\"tag\" :wrap=\"wrap\" :gutters=\"gutters\" :scale=\"scale\"><slot>{{ label }}</slot></component>\n</template>\n\n<script>\nexport default {\n    name: \"MDText\",\n    props: {\n        label: {\n            type: String,\n            default() {\n                return 'Untitled';\n            }            \n        },\n        wrap: {\n            type: Boolean,\n            default() {\n                return true;\n            }\n        },\n        gutters: {\n            type: Number,\n            default() {\n                return 0;\n            }\n        },\n        scale: {\n            type: String,\n            default() {\n                return 'Body1'\n            }\n        },\n        tag: {\n            type: String,\n            default() {\n                return 'mdtext'\n            }\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/material/mdtext.scss';\n</style>\n","import tinycolor from 'tinycolor2'\n\nexport default class Swatch {\n    constructor(props) {\n        this.__key = 'key' in props ? props.key : null\n        this.__value = 'value' in props ? this.validate( props.value ) : null\n        this.__color = {\n            light: tinycolor('#eef0f4'),\n            dark: tinycolor('#303b4d'),\n        }\n        this.__id = `Swatch-${this.__key}-${this.__value.toHex()}`\n    }\n\n    get key() {\n        return this.__key\n    }\n\n    set key( value ) {\n        this.__key = value\n    }\n\n    get value() {\n        return this.__value\n    }\n\n    set value( value ) {\n        this.__value = value\n    }\n\n    validate( value ) {\n        let c = tinycolor(value)\n        return c.isValid() ? c : false\n    }\n\n    accessibility() {\n        let backgroundColor = this.__value.isDark() ? this.__color.light : this.__color.dark\n        let foregroundColor = this.__value\n        let score           = tinycolor.isReadable(foregroundColor,backgroundColor)\n        return !score ? 'poor' : null\n    }\n\n    isBaseColor() {\n        return this.__key == '500'\n    }\n\n    toID() {\n        return this.__id\n    }\n\n    toString() {\n        return !!this.__value ? this.__value.toHexString() : null\n    }\n\n    toStyle() {\n        return {\n            backgroundColor:  this.toString(),\n            color: this.__value.isDark() ? this.__color.light.toHexString() : this.__color.dark.toHexString()\n        }\n    }\n}\n","<template>\n    <md-sheet :id=\"id\" :title=\"title\" class=\"md-sheet\">\n        <md-sheetbody>\n            <md-sheettitle><MDText :label=\"title\" scale=\"body2\" tag=\"span\" /></md-sheettitle>\n            <input type=\"color\" class=\"md-colorpicker\" v-model=\"value\">\n            <template v-if=\"colorValues\">\n                <md-colorlist>\n                    <label :for=\"swatch.toID()\" class=\"md-swatch\" v-for=\"(swatch, index) in colorValues\" :key=\"index\" :style=\"swatch.toStyle()\" :contrast=\"swatch.accessibility()\" :base=\"swatch.isBaseColor()\"  :disabled=\"disabled(swatch.toString())\">\n                        <input type=\"checkbox\" :id=\"swatch.toID()\" :value=\"swatch.toString()\" v-model=\"selectedValues\" :disabled=\"disabled(swatch.toString())\">\n                        <md-swatchlabel><md-swatchkey>{{swatch.key}}</md-swatchkey><md-swatchvalue>{{swatch.toString()}}</md-swatchvalue></md-swatchlabel>\n                    </label>\n                </md-colorlist>\n            </template>\n        </md-sheetbody>\n    </md-sheet>\n</template>\n\n<script>\nimport { computed, ref, reactive, onBeforeMount, onMounted, onBeforeUpdate, onUpdated } from 'vue'\nimport MDText from '@/components/MDText.vue'\nimport Swatch from '@/classes/swatch'\nimport tinycolor from 'tinycolor2'\n\nexport default {\n    name: \"MaterialColorPicker\",\n    components: {MDText},\n    props: {\n        id: {\n            type: String,\n            default() {\n                return null\n            }\n        },\n        title: {\n            type: String,\n            default() {\n                return 'Untitled'\n            }\n        },\n        value: {\n            type: String,\n            default() {\n                return null\n            }\n        },\n        selections: {\n            type: String,\n            default() {\n                return null\n            }\n        },\n        selectionsfield: {\n            type: String,\n            default() {\n                return null\n            }\n        },\n        field: {\n            type: String,\n            default() {\n                return null\n            }\n        }\n    },\n\n    setup(props, {emit}) {\n        const maxSelections         = 3\n        const selectedValues        = ref([])\n        const colorValues           = ref([])\n        const targetField           = ref(null)\n        const targetSelectionsField = ref(null)\n\n        const fieldName = computed(() => {\n            return props.field ?? null\n        })\n\n        const value = computed({\n            get: () => {\n                \n                return props.value\n            },\n            set: ( value ) => {\n                props.value = value // example write directly to property\n                selectedValues.value = [] // Reset selections\n                // if( !targetField.value ) {\n                //     targetField.value = document.querySelector(`#${fieldName.value}`)\n                // }\n\n                targetField.value.value = value\n                targetField.value.classList.add('dirty') // Mark the field as changed\n\n                calculateColors()\n\n                emit( 'update:value', value )\n            }\n        })\n\n        const disabled = ( value ) => {\n            return (selectedValues.value.length >= maxSelections && selectedValues.value.indexOf(value) == -1) ? true : null\n        }\n\n        // Component methods\n        const multiply = (rgb1, rgb2) => {\n            rgb1.b = Math.floor(rgb1.b * rgb2.b / 255)\n            rgb1.g = Math.floor(rgb1.g * rgb2.g / 255)\n            rgb1.r = Math.floor(rgb1.r * rgb2.r / 255)\n            return tinycolor('rgb ' + rgb1.r + ' ' + rgb1.g + ' ' + rgb1.b)\n        }\n\n        const calculateColors = () => {\n            if ( !props.value || !targetField.value ) return false\n\n            // Prioritize the saved colour value as the base color to\n            // deal with SilverStripe's field state/value not changing\n            // after a save, which requires a re-save to reload the field\n            let hex         = (targetField.value?.value != props.value ) ? targetField.value?.value ?? props.value : props.value\n            \n            let baseLight   = tinycolor('#ffffff')\n            let baseDark    = multiply(tinycolor(hex).toRgb(), tinycolor(hex).toRgb())\n            let baseTriad   = tinycolor(hex).tetrad()\n            let swatches    = [\n                new Swatch({key:'50', value: tinycolor.mix(baseLight, hex, 12)}),\n                new Swatch({key:'100', value: tinycolor.mix(baseLight, hex, 30)}),\n                new Swatch({key:'200', value: tinycolor.mix(baseLight, hex, 50)}),\n                new Swatch({key:'300', value: tinycolor.mix(baseLight, hex, 70)}),\n                new Swatch({key:'400', value: tinycolor.mix(baseLight, hex, 85)}),\n                new Swatch({key:'500', value: tinycolor.mix(baseLight, hex, 100)}),\n                new Swatch({key:'600', value: tinycolor.mix(baseDark, hex, 87)}),\n                new Swatch({key:'700', value: tinycolor.mix(baseDark, hex, 70)}),\n                new Swatch({key:'800', value: tinycolor.mix(baseDark, hex, 54)}),\n                new Swatch({key:'900', value: tinycolor.mix(baseDark, hex, 25)}),\n                new Swatch({key:'A100', value: tinycolor.mix(baseDark, baseTriad[4], 15).saturate(80).lighten(65)}),\n                new Swatch({key:'A200', value: tinycolor.mix(baseDark, baseTriad[4], 15).saturate(80).lighten(55)}),\n                new Swatch({key:'A400', value: tinycolor.mix(baseDark, baseTriad[4], 15).saturate(100).lighten(45)}),\n                new Swatch({key:'A700', value: tinycolor.mix(baseDark, baseTriad[4], 15).saturate(100).lighten(40)})\n            ];\n\n            return colorValues.value = swatches\n        }\n\n        const serialize = () => {\n            return targetSelectionsField.value.value = !!selectedValues.value ? JSON.stringify([\n                ...selectedValues.value\n            ]) : ''\n        }\n\n        const getColorByKey = ( key ) => {\n            return colorValues.value.filter( item => item.key == key )\n        }\n\n        const init = () => {\n            // Capture the SS field that will hold the output\n            targetField.value = !targetField.value ? document.querySelector(`#${fieldName.value}`) : targetField.value\n\n            // Capture the SS field that will hold the selections\n            targetSelectionsField.value = !targetSelectionsField.value ? document.querySelector(`#${props.selectionsfield}`) : targetSelectionsField.value\n\n            calculateColors()\n            let baseColor = getColorByKey('50')\n\n            // Only load selections if the base color of the calculated colors contain\n            // the same value as the saved/initial color, otherwise clear the\n            // selections and start the selection process over again\n            if( !!baseColor && !baseColor.toString() == targetField.value?.value ) {\n                selectedValues.value = JSON.parse( props.selections )\n            }else{\n                selectedValues.value = []\n                value.value = (targetField.value?.value != props.value ) ? targetField.value?.value ?? props.value : props.value\n            }\n\n            // Do the same for selections\n            if( targetSelectionsField.value?.value ) {\n                selectedValues.value = JSON.parse( targetSelectionsField.value.value )\n            }\n        }\n\n        // lifecycle hooks\n        onBeforeMount( () => {\n        })\n\n        onMounted( () => {\n            init();\n        })\n\n        onBeforeUpdate( () => {\n        })\n\n        onUpdated( () => {\n            serialize()\n        })\n\n        return {\n            fieldName,\n            targetField,\n            selectedValues,\n            colorValues,\n            disabled,\n            value\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/styles/material/mdcolorlist.scss\";\n</style>\n","import { defineCustomElement } from 'vue'\nimport MaterialColorPicker from '@/components/MaterialColorPicker.ce.vue'\nimport '@/styles/main.scss';\n\n/**\n * @link https://vuejs.org/guide/extras/web-components.html#building-custom-elements-with-vue\n */\n\nexport function register() {\n    const MaterialColorPickerElement = defineCustomElement(MaterialColorPicker)\n    customElements.define('md-vue-colorpicker',MaterialColorPickerElement)\n}\n\nregister();\n"],"names":["sfc","props","target","__vccOpts","key","val","name","label","type","String","default","wrap","Boolean","gutters","Number","scale","tag","_createBlock","_resolveDynamicComponent","$props","_renderSlot","_ctx","constructor","__key","__value","this","validate","value","__color","light","tinycolor","dark","__id","toHex","c","isValid","accessibility","backgroundColor","isDark","foregroundColor","score","isReadable","isBaseColor","toID","toString","toHexString","toStyle","color","components","MDText","id","title","selections","selectionsfield","field","setup","emit","maxSelections","selectedValues","ref","colorValues","targetField","targetSelectionsField","fieldName","computed","get","set","value2","classList","add","disabled","length","indexOf","multiply","rgb1","rgb2","b","Math","floor","g","r","calculateColors","hex","baseLight","baseDark","toRgb","baseTriad","tetrad","swatches","Swatch","mix","saturate","lighten","serialize","JSON","stringify","getColorByKey","filter","item","init","document","querySelector","baseColor","parse","_component_md_sheet","class","_createVNode","_component_md_sheetbody","_component_md_sheettitle","_component_MDText","_createElementVNode","$setup","_component_md_colorlist","_createElementBlock","_Fragment","swatch","index","for","style","contrast","base","_component_md_swatchlabel","_component_md_swatchkey","_component_md_swatchvalue","MaterialColorPickerElement","defineCustomElement","MaterialColorPicker","define","register"],"mappings":"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"}